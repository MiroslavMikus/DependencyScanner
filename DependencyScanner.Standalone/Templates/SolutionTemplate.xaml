<UserControl x:Class="DependencyScanner.Standalone.Templates.SolutionTemplate"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
             xmlns:converter="clr-namespace:DependencyScanner.Standalone.Converters"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:DependencyScanner.Standalone.Templates"
             mc:Ignorable="d"
             xmlns:command="clr-namespace:DependencyScanner.ViewModel.Services;assembly=DependencyScanner.ViewModel"
             xmlns:iconPack="http://metro.mahapps.com/winfx/xaml/iconpacks"
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <converter:BoolToVisibilityConverter x:Key="TrueToVisible" Positive="Visible" Negative="Collapsed" />
        <converter:NullToVisibilityConverter x:Key="NullToCollapse" Positive="Collapsed" Negative="Visible" />
        <converter:NullToBoolConverter x:Key="NullToFalse" Positive="False" Negative="True" />
        <converter:BoolToVisibilityMultiValueConverter x:Key="BoolAnd" />
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition Height="auto" />
            <RowDefinition Height="auto" />
            <RowDefinition Height="auto" />
        </Grid.RowDefinitions>
        <Label Content="{Binding Info.Name}" FontWeight="Bold" FontSize="14" VerticalAlignment="Center" />
        <StackPanel Orientation="Horizontal" Grid.Row="1">
            <TextBlock Margin="4 2 2 2" Grid.Row="1" Text="{Binding Info.FullName}"
                   FontWeight="Regular"
                   FontSize="11"
                   TextWrapping="Wrap"
                   HorizontalAlignment="Left"
                   Width="400">
            </TextBlock>
        </StackPanel>
        <StackPanel Orientation="Horizontal" Margin="4" Grid.Row="2" Visibility="{Binding GitInformation, Converter={StaticResource NullToCollapse}}">
            <TextBlock VerticalAlignment="Center" Grid.Column="0"
                       Text="Status:"
                       Margin="0 0 5 0" />
            <Label Margin="0 0 5 0">
                <Label.Style>
                    <Style TargetType="Label" BasedOn="{StaticResource {x:Type Label}}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding GitInformation.IsBehind}" Value="True">
                                <Setter Property="Foreground" Value="Lime" />
                            </DataTrigger>

                            <DataTrigger Binding="{Binding GitInformation.IsClean}" Value="False">
                                <Setter Property="Foreground" Value="Red" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Label.Style>
                <iconPack:PackIconFontAwesome Kind="InfoCircleSolid" />
                <Label.ToolTip>
                    <StackPanel>
                        <Label Content="Git status" FontWeight="Bold" />
                        <Label Content="{Binding GitInformation.Status}" />
                    </StackPanel>
                </Label.ToolTip>
            </Label>

            <Button Height="25" Width="25" Padding="1" Margin="0 0 5 0" ToolTip="Git Pull"
                    IsEnabled="{Binding GitInformation.IsClean}"
                    Command="{Binding GitInformation.PullCommand}">

                <iconPack:PackIconFontAwesome Kind="CodeBranchSolid" />
            </Button>
            <ComboBox ItemsSource="{Binding GitInformation.BranchList}"
                      MinWidth="100"
                      Margin="2 0 5 0"
                      HorizontalAlignment="left"
                      SelectedItem="{Binding GitInformation.CurrentBranch, Mode=TwoWay}"
                      IsEnabled="{Binding GitInformation.IsClean}" />
        </StackPanel>
        <DockPanel Grid.Row="3">
            <DockPanel.Resources>
                <Style TargetType="Button" BasedOn="{StaticResource MahApps.Metro.Styles.MetroCircleButtonStyle}">
                    <Setter Property="Width" Value="30" />
                    <Setter Property="Height" Value="30" />
                    <Setter Property="Margin" Value="2" />
                    <Setter Property="Background" Value="White" />
                    <Setter Property="Foreground" Value="{DynamicResource AccentColorBrush}" />
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="{DynamicResource AccentColorBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource GrayBrush7}" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </DockPanel.Resources>
            <!--Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=DataContext.RunCommand}"-->
            <Button Command="{x:Static command:CommandManager.RunCommand}"
                    CommandParameter="{Binding Info.FullName}"
                    Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=DataContext.MainSettings.ShowOpenButton, Converter={StaticResource TrueToVisible}}">
                <Button.ToolTip>
                    <StackPanel>
                        <Label Content="Open solution" FontWeight="Bold" />
                        <Label Content="{Binding Info.FullName}" />
                    </StackPanel>
                </Button.ToolTip>
                <iconPack:FontAwesome Kind="ExternalLinkAltSolid" />
            </Button>
            <Button Command="{x:Static command:CommandManager.RunCommand}"
                    CommandParameter="{Binding Info.DirectoryName}"
                    Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=DataContext.MainSettings.ShowFolderButton, Converter={StaticResource TrueToVisible}}">
                <Button.ToolTip>
                    <StackPanel>
                        <Label Content="Open Folder" FontWeight="Bold" />
                        <Label Content="{Binding Info.DirectoryName}" />
                    </StackPanel>
                </Button.ToolTip>
                <iconPack:FontAwesome Kind="FolderOpenSolid" />
            </Button>
            <Button Command="{x:Static command:CommandManager.OpenCmdCommand}"
                    CommandParameter="{Binding Info.DirectoryName}"
                    Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=DataContext.MainSettings.ShowCmdButton, Converter={StaticResource TrueToVisible}}">
                <Button.ToolTip>
                    <StackPanel>
                        <Label Content="Open CMD" FontWeight="Bold" />
                        <Label Content="{Binding Info.DirectoryName}" />
                    </StackPanel>
                </Button.ToolTip>
                <iconPack:PackIconFontAwesome Kind="TerminalSolid" />
            </Button>
            <Button Command="{x:Static command:CommandManager.OpenTextFileCommand}"
                    CommandParameter="{Binding Info.FullName}"
                    Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=DataContext.MainSettings.ShowOpenFileButton, Converter={StaticResource TrueToVisible}}">
                <Button.ToolTip>
                    <StackPanel>
                        <Label Content="Open solution as text file" FontWeight="Bold" />
                        <Label Content="{Binding Info.FullName}" />
                    </StackPanel>
                </Button.ToolTip>
                <iconPack:PackIconFontAwesome Kind="FileAltSolid" />
            </Button>
            <Button Command="{x:Static command:CommandManager.OpenLinkCommand}"
                    CommandParameter="{Binding GitInformation.RemoteUrl}">
                <Button.Visibility>
                    <MultiBinding Converter="{StaticResource BoolAnd}">
                        <Binding RelativeSource="{RelativeSource AncestorType={x:Type Window}}" Path="DataContext.MainSettings.ShowOpenUrlButton" />
                        <Binding Converter="{StaticResource NullToFalse}" Path="GitInformation" />
                    </MultiBinding>
                </Button.Visibility>
                <Button.ToolTip>
                    <StackPanel>
                        <Label Content="Open remote url" FontWeight="Bold" />
                        <Label Content="{Binding GitInformation.RemoteUrl}" />
                    </StackPanel>
                </Button.ToolTip>
                <iconPack:PackIconFontAwesome Kind="EdgeBrands" />
            </Button>
            <Button Command="{Binding RefreshCommand}" HorizontalAlignment="Right">
                <Button.ToolTip>
                    <StackPanel Orientation="Vertical">
                        <Label Content="Refresh" FontWeight="Bold" />
                        <Label Content="Update solution" />
                    </StackPanel>
                </Button.ToolTip>
                <iconPack:PackIconFontAwesome Kind="SyncAltSolid" />
            </Button>
        </DockPanel>
    </Grid>
</UserControl>
